{
  "log" : {
    "version" : "1.2",
    "pages" : [ ],
    "entries" : [ {
      "startedDateTime" : "2019-09-10T06:03:13.343Z",
      "request" : {
        "method" : "GET",
        "url" : "https://testing.adeptforms.com/modules/cdg/api.js?v=1568095372",
        "httpVersion" : "",
        "cookies" : [ ],
        "headers" : [ ],
        "queryString" : [ {
          "name" : "v",
          "value" : "1568095372"
        } ],
        "headersSize" : 0,
        "bodySize" : 0,
        "comment" : ""
      },
      "response" : {
        "status" : 200,
        "statusText" : "",
        "httpVersion" : "",
        "cookies" : [ ],
        "headers" : [ {
          "name" : "Keep-Alive",
          "value" : "timeout=5, max=100"
        }, {
          "name" : "Accept-Ranges",
          "value" : "bytes"
        }, {
          "name" : null,
          "value" : "HTTP/1.1 200 OK"
        }, {
          "name" : "Server",
          "value" : "Apache/2.4.18 (Ubuntu)"
        }, {
          "name" : "ETag",
          "value" : "\"5735-58f839dfa50be;5882f1cff6e94\""
        }, {
          "name" : "Connection",
          "value" : "Keep-Alive"
        }, {
          "name" : "Vary",
          "value" : "Accept-Encoding"
        }, {
          "name" : "Last-Modified",
          "value" : "Wed, 07 Aug 2019 09:32:17 GMT"
        }, {
          "name" : "Content-Length",
          "value" : "22325"
        }, {
          "name" : "Date",
          "value" : "Tue, 10 Sep 2019 06:03:13 GMT"
        }, {
          "name" : "Content-Type",
          "value" : "application/javascript"
        } ],
        "content" : {
          "size" : 22325,
          "mimeType" : "application/javascript",
          "text" : "// ================= Customer Session =================\nconst SIGN_UP_CHECK_URL = url('module/cdg/session/customer/signup/check');\nconst SIGN_UP_CUSTOMER = (code) => url('module/cdg/session/customer/signup/customer/' + code);\nconst GET_URL = url('module/cdg/session/customer/signup/check');\nconst LOGIN_URL = url('module/cdg/session/customer/login');\nconst FORGOT_PASSWORD_CUSTOMER = url('module/cdg/session/customer/forgotPassword');\nconst RESET_PASSWORD_CUSTOMER = (code) => url('module/cdg/session/customer/resetPassword?code=' + code);\n\n// ================= Customer Main =================\nconst TIKET_LIST_URL = url('module/cdg/main/customer/ticket/list');\nconst TIKET_DETAIL_URL = (ticketID) => url('module/cdg/main/customer/ticket/get/' + ticketID);\nconst TIKET_ADD_URL = url('module/cdg/main/customer/ticket/add');\nconst TRACKING_PROGRESS_CUSTOMER_URL = (ticketID) => url('module/cdg/main/customer/ticket/tracking/' + ticketID);\nconst PROFILE_URL = url('module/cdg/main/customer/get');\nconst UPDATE_PROFILE_URL = url('module/cdg/main/customer/update');\nconst UPDATE_PASSWORD_URL = url('module/cdg/setting/customer/changePassword');\nconst PRODUCT_DETAIL_CUSTOMER_URL = url('module/cdg/main/customer/product/detail/');\nconst SUBMIT_TICKET = (ticketID) => url('module/cdg/main/customer/ticket/submit/' + ticketID);\nconst PRODUCT_LIST_URL = url('module/cdg/main/customer/product/list');\nconst PRODUCT_TABLE_URL = url('module/cdg/main/customer/product/table');\nconst UPLOAD_IMG_TICKET_URL = url('module/cdg/main/customer/media/add');\nconst SELECTED_SPECIALIST_CUSTOMER_URL = url('module/cdg/main/customer/specialist');\nconst CASE_CATEGORIES_URL = url('module/cdg/main/customer/categories');\nconst STORE_SELECTION_URL = url('module/cdg/main/customer/store/selection');\nconst TIME_DISABLE_BOOKING_URL = url('module/cdg/main/customer/meetSales/timeByDay/selection');\nconst ADD_BOOKING_URL = url('module/cdg/main/customer/meetSales/add');\nconst ADD_PRODUCT_URL = url('module/cdg/main/customer/product/add');\nconst SAVE_PRODUCT_URL = url('module/cdg/main/customer/product/update');\nconst CHAT_LIST_URL = url('module/cdg/main/customer/chatProduct/list');\nconst CANCEL_APPOINTMENT_URL = url('module/cdg/main/customer/meetSales/update');\nconst ASSIGN_SPECIALIST_CUSTOMER = (ticketID) => url(`module/cdg/main/customer/ticket/${ticketID}/specialist`);\n\n\n\n// ================= Service Worker =================\nconst MENU_SERVICE_WORKER_URL = url('module/cdg/permission/specialist/menu');\nconst SW_LIST_DEVICE_URL = url('module/cdg/main/specialist/product/list');\nconst DETAIL_DIAGNOSE_URL = (serviceID) => url('module/cdg/main/specialist/diagnoseDetail/' + serviceID);\nconst DETAIL_REPAIR_URL = (serviceID) => url('module/cdg/main/specialist/repairDetail/' + serviceID);\nconst SCHEDULE_REPAIR_URL = url('module/cdg/main/specialist/scheduleRepair');\nconst CONTINUE_REPAIR_URL = (serviceID) => url('module/cdg/main/specialist/continueRepair/' + serviceID);\nconst DETAIL_IN_PROGRESS_URL = (serviceID) => url('module/cdg/main/specialist/inProgressDetail/' + serviceID);\nconst DETAIL_PENDING_URL = (serviceID) => url('module/cdg/main/specialist/pendingDetail/' + serviceID);\nconst DETAIL_RETURN_URL = (serviceID) => url('module/cdg/main/specialist/returnDetail/' + serviceID);\nconst DETAIL_FINISH_URL = (serviceID) => url('module/cdg/main/specialist/finishDetail/' + serviceID);\nconst DETAIL_INVOICE_URL = (serviceID) => url('module/cdg/main/specialist/invoiceDetail/' + serviceID);\nconst ADD_DIAGNOSE_CATEGORIES_URL = url('module/cdg/main/specialist/category/add');\nconst UPDATE_DIAGNOSE_CATEGORIES_URL = url('module/cdg/main/specialist/category/update');\nconst CATEGORIES_DIAGNOSE_URL = url('module/cdg/main/specialist/categories');\nconst SPAREPARTS_URL = url('module/cdg/magento/product/spareparts');\nconst ADD_DIAGNOSE_URL = url('module/cdg/main/specialist/product/diagnoseReport');\nconst ADD_REPAIR_URL = url('module/cdg/main/specialist/product/repairReport');\nconst ADD_PENDING_REPORT_URL = url('module/cdg/main/specialist/product/pendingReport');\nconst CHAT_PRODUCT_CUSTOMERS_URL = url('module/cdg/main/specialist/chatProduct/list');\nconst GET_CHAT_PRODUCT_CUSTOMERS_URL = (serviceID) => url('module/cdg/main/specialist/customer/get/' + serviceID);\nconst FINISH_REPAIR_URL = (serviceID) => url('module/cdg/main/specialist/finishService/' + serviceID);\nconst REPAIR_PRODUCT_URL = (serviceID) => url('module/cdg/main/specialist/product/get/' + serviceID);\nconst REPAIR_PROGRESS_URL = (serviceID) => url('module/cdg/main/specialist/product/tracking/' + serviceID);\n\n// ================= Admin =================\nconst UPDATE_CATEGORY_ADMIN_URL = url('module/cdg/admin/setting/categories/update');\nconst ADD_CATEGORY_ADMIN_URL = url('module/cdg/admin/setting/categories');\n\nconst GET_MENU_ADMIN_URL = url('module/cdg/permission/admin/menu');\nconst UPDATE_CUSTOMERS_ADMIN_URL = url('module/cdg/setting/admin/customer/update');\nconst UPDATE_PASSWORD_ADMIN_URL = url('module/cdg/setting/admin/customer/reset/password');\nconst ADD_CUSTOMERS_ADMIN_URL = url('module/cdg/setting/admin/customer/add');\nconst SUBMITTED_DEVICE_LIST_URL = url('module/cdg/setting/admin/product/list');\nconst SUBMITTED_DEVICE_DETAIL_URL = (submittedID) => url('module/cdg/setting/admin/product/get/' + submittedID);\nconst SUBMITTED_VERIFICATION_DETAIL_URL = (verificationID) => url('module/cdg/setting/admin/verificationDetail/' + verificationID);\nconst TRACKING_DEVICE_DETAIL_URL = (productID) => url('module/cdg/setting/admin/product/tracking/' + productID);\nconst VERIFICATION_SUBMITTED_URL = url('module/cdg/setting/admin/product/check');\nconst RETURN_REPORT_SUBMITTED_URL = url('module/cdg/setting/admin/product/returnReport');\nconst ANALYTIC_ADMIN_URL = url('module/cdg/setting/admin/product/analytic');\nconst DIAGNOSE_ANALYTIC_ADMIN_URL = url('module/cdg/setting/admin/category/diagnoseAnalytic');\nconst REPAIR_ANALYTIC_ADMIN_URL = url('module/cdg/setting/admin/category/repairAnalytic');\nconst PROFILE_ADMIN_URL = url('module/cdg/setting/admin/profile');\nconst UPDATE_BASE_ADMIN_URL = url('module/cdg/setting/admin/save/signup/url');\nconst ADD_STORE_ADMIN_URL = url('module/cdg/setting/admin/store/add');\nconst UPDATE_STORE_ADMIN_URL = url('module/cdg/setting/admin/store/update');\nconst UPDATE_APPOINTMENT_ADMIN_URL = url('module/cdg/setting/admin/meetSales/update');\nconst UPDATE_WARRANTY_ADMIN_URL = url('module/cdg/setting/admin/ticket/update');\nconst GET_WARRANTY_URL = url('module/cdg/main/customer/product/getWarranty');\nconst GET_ROLES_URL = url('permission/ajax/role/list');\nconst GET_ROLE_BY_ID_URL = url(`workflow/get/all/user/active`);\nconst TOKEN_MAGENTO = url('module/cdg/integration/token');\n// const GET_ROLE_BY_ID_URL = (id) => url(`user/role/${id}`);\nconst SPECIALIST_LIST_URL = url('module/cdg/assign/specialist/list');\nconst SELECTED_SPECIALIST_LIST_URL = url('module/cdg/main/specialist');\nconst SAVE_SELECTED_SPECIALIST_URL = url('module/cdg/main/specialist/create');\nconst ASSIGN_SPECIALIST_ADMIN = (ticketID) => url(`module/cdg/main/admin/ticket/${ticketID}/specialist`);\n\n// ================= Utilities =================\nconst GET_ASSIGNED_TICKET_LIST = url('module/cdg/main/specialist/ticket/list');\nconst CHANGE_TICKET_STATUS = url('module/cdg/tracking/status');\nconst GET_TEST = (ticketID) => url(`module/cdg/test/ticket/${ticketID}/run-time`);\n\nconst PRINTING__URL = url(\"module/cdg/main/customer/print/update\");\nconst PICTURING_URL = url(\"module/cdg/main/customer/picture/save\");\n\n\nVue.http.options.emulateJSON = true;\nvar cdg_api = new Vue({\n    methods: {\n        getCustomerProfile(callback) {\n            this.$http.get(PROFILE_URL)\n                .then((response)=> {\n                    callback && callback(response); \n                })\n                .catch((error)=> {\n                    console.log(error); \n                    Alert.error('Failed to get profile data'); \n                });\n        },\n        getAdminProfile(callback) {\n            this.$http.get(PROFILE_ADMIN_URL)\n                .then((response)=> {\n                    callback && callback(response); \n                })\n                .catch((error)=> {\n                    console.log(error); \n                    Alert.error('Failed to get profile data'); \n                });\n        },\n        getProfileByUserType(userType, callback) {\n            if(userType == 'admin') {\n                this.getAdminProfile(callback);\n            }\n            else if(userType == 'specialist') {\n                this.getAdminProfile(callback);\n            }\n            else {\n                this.getCustomerProfile(callback);\n            }\n        },\n        getCustomerNotification(request, callback) {\n            this.$http.post(GET_CUSTOMER_NOTIFICATION_URL, request)\n                .then((response)=> {\n                    callback && callback(response); \n                })\n                .catch((error)=> {\n                    console.log(error); \n                    Alert.error('Failed to get notifications'); \n                });\n        },\n        getSpecialistNotification(request, callback) {\n            this.$http.post(GET_SPECIALIST_NOTIFICATION_URL, request)\n                .then((response)=> {\n                    callback && callback(response); \n                })\n                .catch((error)=> {\n                    console.log(error); \n                    Alert.error('Failed to get notifications'); \n                });\n        },\n        getAdminNotification(request, callback) {\n            this.$http.post(GET_ADMIN_NOTIFICATION_URL, request)\n                .then((response)=> {\n                    callback && callback(response); \n                })\n                .catch((error)=> {\n                    console.log(error); \n                    Alert.error('Failed to get notifications'); \n                });\n        },\n        getNotificationByUserType(userType, request, callback) {\n            if(userType == 'admin') {\n                this.getAdminNotification(request, callback);\n            }\n            else if(userType == 'specialist') {\n                this.getSpecialistNotification(request, callback);\n            }\n            else {\n                this.getCustomerNotification(request, callback);\n            }\n        },\n        readNotificationByIdAsCustomer(notificationId, callback) {\n            this.$http.put(READ_NOTIFICATION_BY_ID_AS_CUSTOMER_URL(notificationId))\n                .then((response)=> {\n                    callback && callback(response); \n                })\n                .catch((error)=> {\n                    console.log(error); \n                    Alert.error('Failed to set notification as read'); \n                });\n        },\n        readNotificationByIdAsSpecialist(notificationId, callback) {\n            this.$http.put(READ_NOTIFICATION_BY_ID_AS_SPECIALIST_URL(notificationId))\n                .then((response)=> {\n                    callback && callback(response); \n                })\n                .catch((error)=> {\n                    console.log(error); \n                    Alert.error('Failed to set notification as read'); \n                });\n        },\n        readNotificationByIdAsAdmin(notificationId, callback) {\n            this.$http.put(READ_NOTIFICATION_BY_ID_AS_ADMIN_URL(notificationId))\n                .then((response)=> {\n                    callback && callback(response); \n                })\n                .catch((error)=> {\n                    console.log(error); \n                    Alert.error('Failed to set notification as read'); \n                });\n        },\n        readNotificationByIdAndUserType(notificationId, userType, callback) {\n            if(userType == 'customer') {\n                this.readNotificationByIdAsCustomer(notificationId, callback);\n            }\n            else if(userType == 'specialist') {\n                this.readNotificationByIdAsSpecialist(notificationId, callback);\n            }\n            else if(userType == 'admin') {\n                this.readNotificationByIdAsAdmin(notificationId, callback); \n            }\n            else {\n                callback && callback(); \n            }\n        },\n        signUpCustomer: function (data, code) {\n            return this.$http.post(SIGN_UP_CUSTOMER(code), data);\n        },\n        signUpCheck: function (data) {\n            return this.$http.post(SIGN_UP_CHECK_URL, data);\n        },\n        loginCheck: function (data) {\n            return this.$http.post(LOGIN_URL, data);\n        },\n        forgotPasswordCustomer: function (data) {\n            return this.$http.post(FORGOT_PASSWORD_CUSTOMER, data);\n        },\n        resetPasswordCustomer: function (data, code) {\n            return this.$http.post(RESET_PASSWORD_CUSTOMER(code), data);\n        },\n        tiketList: function (data) {\n            return this.$http.post(TIKET_LIST_URL, data);\n        },\n        ticketDetail: function (ticketID) {\n            return this.$http.get(TIKET_DETAIL_URL(ticketID));\n        },\n        caseCategories: function () {\n            return this.$http.get(CASE_CATEGORIES_URL);\n        },\n        ticketAdd: function (data) {\n            return this.$http.post(TIKET_ADD_URL, data);\n        },\n        trackingProgressCustomer: function (ticketID) {\n            return this.$http.get(TRACKING_PROGRESS_CUSTOMER_URL(ticketID));\n        },\n        profileGet: function () {\n            return this.$http.get(PROFILE_URL);\n        },\n        storeSelectionGet: function () {\n            return this.$http.get(STORE_SELECTION_URL);\n        },\n        timeDisableBooking: function (data) {\n            return this.$http.post(TIME_DISABLE_BOOKING_URL, data);\n        },\n        addBooking: function (data) {\n            return this.$http.post(ADD_BOOKING_URL, data);\n        },\n        addProduct: function (data) {\n            return this.$http.post(ADD_PRODUCT_URL, data);\n        },\n        saveProduct: function (data) {\n            return this.$http.post(SAVE_PRODUCT_URL, data);\n        },\n        profileUpdate: function (data) {\n            return this.$http.post(UPDATE_PROFILE_URL, data);\n        },\n        passwordUpdate: function (data) {\n            return this.$http.post(UPDATE_PASSWORD_URL, data);\n        },\n        productCustomerDetail: function (data) {\n            return this.$http.post(PRODUCT_DETAIL_CUSTOMER_URL, data);\n        },\n        submitTicket: function (ticketID) {\n            return this.$http.get(SUBMIT_TICKET(ticketID));\n        },\n        productList: function (data) {\n            return this.$http.post(PRODUCT_LIST_URL, data);\n        },\n        imageGenerateTicket: function (data) {\n            return this.$http.post(UPLOAD_IMG_TICKET_URL, data);\n        },\n        loadChatList: function (data) {\n            return this.$http.post(CHAT_LIST_URL, data);\n        },\n        cancelAppointment: function (data) {\n            return this.$http.post(CANCEL_APPOINTMENT_URL, data);\n        },\n        assignSpecialistCustomer: function (data, ticketID) {\n            return this.$http.post(ASSIGN_SPECIALIST_CUSTOMER(ticketID), data);\n        },\n        getSpecialists: function () {\n            return this.$http.get(SELECTED_SPECIALIST_CUSTOMER_URL);\n        },\n\n\n        // ================= Service Worker =================\n\n        menuServiceWorker: function (data) {\n            return this.$http.post(MENU_SERVICE_WORKER_URL, data);\n        },\n        swDeviceList: function (data) {\n            return this.$http.post(SW_LIST_DEVICE_URL, data);\n        },\n        detailDiagnose: function (serviceID) {\n            return this.$http.get(DETAIL_DIAGNOSE_URL(serviceID));\n        },\n        detailRepair: function (serviceID) {\n            return this.$http.get(DETAIL_REPAIR_URL(serviceID));\n        },\n        scheduleRepair: function (data) {\n            return this.$http.post(SCHEDULE_REPAIR_URL, data);\n        },\n        continueRepair: function (serviceID, data) {\n            return this.$http.post(CONTINUE_REPAIR_URL(serviceID), data);\n        },\n        detailInProgress: function (serviceID) {\n            return this.$http.get(DETAIL_IN_PROGRESS_URL(serviceID));\n        },\n        detailPending: function (serviceID) {\n            return this.$http.get(DETAIL_PENDING_URL(serviceID));\n        },\n        detailReturn: function (serviceID) {\n            return this.$http.get(DETAIL_RETURN_URL(serviceID));\n        },\n        detailFinish: function (serviceID) {\n            return this.$http.get(DETAIL_FINISH_URL(serviceID));\n        },\n        detailInvoice: function (serviceID) {\n            return this.$http.get(DETAIL_INVOICE_URL(serviceID));\n        },\n        addDiagnoseCategory: function (data) {\n            return this.$http.post(ADD_DIAGNOSE_CATEGORIES_URL, data);\n        },\n        updateDiagnoseCategory: function (data) {\n            return this.$http.post(UPDATE_DIAGNOSE_CATEGORIES_URL, data);\n        },\n        categoriesDiagnose: function () {\n            return this.$http.get(CATEGORIES_DIAGNOSE_URL);\n        },\n        spareparts: function () {\n            return this.$http.get(SPAREPARTS_URL);\n        },\n        addDiagnose: function (data) {\n            return this.$http.post(ADD_DIAGNOSE_URL, data);\n        },\n        addRepairReport: function (data) {\n            return this.$http.post(ADD_REPAIR_URL, data);\n        },\n        addPendingReport: function (data) {\n            return this.$http.post(ADD_PENDING_REPORT_URL, data);\n        },\n        chatProductCustomers: function (data) {\n            return this.$http.post(CHAT_PRODUCT_CUSTOMERS_URL, data);\n        },\n        getChatProductCustomers: function (serviceID) {\n            return this.$http.get(GET_CHAT_PRODUCT_CUSTOMERS_URL(serviceID));\n        },\n        finishRepair: function (serviceID, data) {\n            return this.$http.post(FINISH_REPAIR_URL(serviceID), data);\n        },\n        repairProduct: function (serviceID) {\n            return this.$http.get(REPAIR_PRODUCT_URL(serviceID));\n        },\n        repairProgress: function (serviceID) {\n            return this.$http.get(REPAIR_PROGRESS_URL(serviceID));\n        },\n\n\n        // ================= Admin =================\n\n        menuAdmin: function (data) {\n            return this.$http.post(GET_MENU_ADMIN_URL, data);\n        },\n\n        updateCustomersAdmin: function (data) {\n            return this.$http.post(UPDATE_CUSTOMERS_ADMIN_URL, data);\n        },\n\n        resetPasswordAdmin: function (data) {\n            return this.$http.post(UPDATE_PASSWORD_ADMIN_URL, data);\n        },\n\n        updateStoreAdmin: function (data) {\n            return this.$http.post(UPDATE_STORE_ADMIN_URL, data);\n        },\n\n        addCustomersAdmin: function (data) {\n            return this.$http.post(ADD_CUSTOMERS_ADMIN_URL, data);\n        },\n\n        addStoreAdmin: function (data) {\n            return this.$http.post(ADD_STORE_ADMIN_URL, data);\n        },\n\n        submittedDeviceAdmin: function (data) {\n            return this.$http.post(SUBMITTED_DEVICE_LIST_URL, data);\n        },\n\n        detailSubmittedDeviceAdmin: function (submittedID) {\n            return this.$http.get(SUBMITTED_DEVICE_DETAIL_URL(submittedID));\n        },\n\n        detailVerificationDeviceAdmin: function (verificationID) {\n            return this.$http.get(SUBMITTED_VERIFICATION_DETAIL_URL(verificationID));\n        },\n        getWarrantyAdmin: function (skuID) {\n            return this.$http.post(GET_WARRANTY_URL, skuID);\n        },\n\n        verificationDetailSubmittedDeviceAdmin: function (data) {\n            return this.$http.post(VERIFICATION_SUBMITTED_URL, data);\n        },\n\n        returnReportDetailSubmittedDeviceAdmin: function (data) {\n            return this.$http.post(RETURN_REPORT_SUBMITTED_URL, data);\n        },\n\n        analyticAdmin: function (data) {\n            return this.$http.post(ANALYTIC_ADMIN_URL, data);\n        },\n\n        diagnoseAnalyticAdmin: function (data) {\n            return this.$http.post(DIAGNOSE_ANALYTIC_ADMIN_URL, data);\n        },\n\n        repairAnalyticAdmin: function (data) {\n            return this.$http.post(REPAIR_ANALYTIC_ADMIN_URL, data);\n        },\n\n        trackingDeviceAdmin: function (productID) {\n            return this.$http.get(TRACKING_DEVICE_DETAIL_URL(productID));\n        },\n\n        profileAdminGet: function () {\n            return this.$http.get(PROFILE_ADMIN_URL);\n        },\n\n        updateBaseAdminUrl: function (data) {\n            return this.$http.post(UPDATE_BASE_ADMIN_URL, data);\n        },\n\n        updateAppointmentAdminUrl: function (data) {\n            return this.$http.post(UPDATE_APPOINTMENT_ADMIN_URL, data);\n        },\n\n        updateWarrantyAdminUrl: function (data) {\n            return this.$http.post(UPDATE_WARRANTY_ADMIN_URL, data);\n        },\n\n        specialistList: function (data) {\n            return this.$http.post(SPECIALIST_LIST_URL, data);\n        },\n\n        getRoles: function () {\n            return this.$http.post(GET_ROLES_URL);\n        },\n\n        getRoleByID: function (id) {\n            return this.$http.post(GET_ROLE_BY_ID_URL);\n        },\n\n        saveSelectedSpecialists: function (data) {\n            return this.$http.post(SAVE_SELECTED_SPECIALIST_URL, data);\n        },\n\n        getSelectedSpecialists: function () {\n            return this.$http.get(SELECTED_SPECIALIST_LIST_URL);\n        },\n\n        assignSpecialistAdmin: function (data, ticketID) {\n            return this.$http.post(ASSIGN_SPECIALIST_ADMIN(ticketID), data);\n        },\n\n        tokenMagento: function (data) {\n            return this.$http.post(TOKEN_MAGENTO, data);\n        },\n\n        // ================= Utilities =================\n        getAssignedTicektList: function () {\n            return this.$http.get(GET_ASSIGNED_TICKET_LIST);\n        },\n\n        getTest: function (ticketID) {\n            return this.$http.get(GET_TEST(ticketID));\n        },\n\n        changeTicketStatus: function (data) {\n            return this.$http.post(CHANGE_TICKET_STATUS, data);\n        },\n\n        spareparts: function () {\n            return this.$http.get(SPAREPARTS_URL);\n        },\n\n        updateCategoryAdmin: function (data) {\n            return this.$http.post(UPDATE_CATEGORY_ADMIN_URL, data);\n        },\n        addCategoryAdmin: function (data) {\n            return this.$http.post(ADD_CATEGORY_ADMIN_URL, data);\n        }\n\n    },\n});\n",
          "comment" : ""
        },
        "redirectURL" : "",
        "headersSize" : 279,
        "bodySize" : 22325,
        "comment" : ""
      },
      "cache" : { },
      "timings" : {
        "comment" : "",
        "connect" : 224,
        "ssl" : -1,
        "dns" : -1,
        "wait" : 0,
        "send" : 0,
        "receive" : 0,
        "blocked" : -1
      },
      "comment" : "",
      "_katalonRequestInformation" : {
        "name" : "43",
        "testObjectId" : "Temporary RESTful request object",
        "harId" : "6d64bb5c-93d1-49ab-b062-2234ca6165ee",
        "reportFolder" : null
      },
      "time" : 224
    } ],
    "comment" : ""
  }
}